name: Validate code

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate_code:
    name: Validate Code
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Validate Code
        run: |
          npm install
          npm i -g vsce

          vsce package

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Create Release
        env:
          MAJOR_V: "0"
          MINOR_V: "2"
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -e
          providedMajor=$MAJOR_V
          providedMinor=$MINOR_V
          currentVersion=$(git describe --tags --abbrev=7)
          currentMinor=$(echo $currentVersion | cut -d. -f2)
          currentMajor=$(echo $currentVersion | cut -d. -f1 | cut -dv -f2)
          if [[ $currentMajor -eq $providedMajor ]] && [[ $providedMinor -eq $currentMinor ]];
          then
            currentRevision=$(echo $(echo $currentVersion | rev | cut -d. -f1) | rev | cut -d- -f1)
            nextRevision=$(( currentRevision + 1 ))
          else
            nextRevision='0'
          fi
          nextVersion="v$providedMajor.$providedMinor.$nextRevision"
          gh release create $nextVersion --generate-notes
